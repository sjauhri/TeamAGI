import pickle
import numpy as np
'''
6D maps: "https://archimedes.ias.informatik.tu-darmstadt.de/s/5nnZRXSjAzGG8Hn"
1) pkl_p3TOp2(): Modify the pkl file generated by python3 env to make it available for python2
2) clip_maps(height, boundary): clip the map with boundary along z axis
'''


def pkl_p3TOp2():
    # Modify the pkl file generated by python3 to make it available for python2
    path_maps_6D_p3_l = "/home/qiao/Proj_Robman/maps/maps_6D_p3/filt_reach_map_gripper_left_grasping_frame_torso_False.pkl"
    path_maps_6D_p3_r = "/home/qiao/Proj_Robman/maps/maps_6D_p3/filt_reach_map_gripper_right_grasping_frame_torso_False.pkl"
    map_l = pickle.load(open(path_maps_6D_p3_l, 'rb'))
    map_r = pickle.load(open(path_maps_6D_p3_r, 'rb'))
    path_maps_6D_p2_l = "/home/qiao/Proj_Robman/maps/maps_6D_p2/filt_reach_map_gripper_left_grasping_frame_torso_False.pkl"
    path_maps_6D_p2_r = "/home/qiao/Proj_Robman/maps/maps_6D_p2/filt_reach_map_gripper_right_grasping_frame_torso_False.pkl"
    pickle.dump(map_l, open(path_maps_6D_p2_l, "wb"), protocol=2)
    pickle.dump(map_r, open(path_maps_6D_p2_r, "wb"), protocol=2)
    
def clip_map_inZ(map, height, boundary):
    # map, height of the table, boundary -> clipped map along z axis
    z = map[:,2]
    inds_z1 = np.argwhere(z<=(height+boundary)).reshape(-1)
    map_cl_axis_ = map[inds_z1,:]
    inds_z2 = np.argwhere(map_cl_axis_[:,2]>=(height-boundary)).reshape(-1)
    map_cl_axis = map_cl_axis_[inds_z2,:]
    
    # print(inds_z1.shape)
    # print(inds_z2.shape)
    # print("---------------------")
    
    # print(np.max(map[:,2]))
    # print(np.min(map[:,2]))
    # print(np.max(map_cl_axis_[:,2]))
    # print(np.min(map_cl_axis_[:,2]))
    # print("---------------------")
    print(np.max(map_cl_axis[:,2]))
    print(np.min(map_cl_axis[:,2]))
    print("---------------------")
    
    
    # print(map.shape)
    # print(map_cl_axis.shape)
    return map_cl_axis

def clip_maps(height, boundary):
    
    path_maps_6D_p2_l = "/home/qiao/Proj_Robman/maps/maps_6D_p2/filt_reach_map_gripper_left_grasping_frame_torso_False.pkl"
    path_maps_6D_p2_r = "/home/qiao/Proj_Robman/maps/maps_6D_p2/filt_reach_map_gripper_right_grasping_frame_torso_False.pkl"
    map_l = pickle.load(open(path_maps_6D_p2_l, 'rb'))
    map_r = pickle.load(open(path_maps_6D_p2_r, 'rb'))
    
    map_clip_l = clip_map_inZ(map_l, height, boundary)
    map_clip_r = clip_map_inZ(map_l, height, boundary)

    map_l_cliped = map_clip_l
    map_r_cliped = map_clip_r
    path_maps_6D_p2_aboveTable_l = "/home/qiao/Proj_Robman/maps/maps_6D_p2_clipped/reach_map_6D_left_clipped.pkl"
    path_maps_6D_p2_aboveTable_r = "/home/qiao/Proj_Robman/maps/maps_6D_p2_clipped/reach_map_6D_right_clipped.pkl"
    pickle.dump(map_l_cliped, open(path_maps_6D_p2_aboveTable_l , "wb"), protocol=2)
    pickle.dump(map_r_cliped, open(path_maps_6D_p2_aboveTable_r, "wb"), protocol=2)


if __name__ == '__main__':
    # pkl_p3TOp2()
    cube = 0.045
    height = 0.45 + cube/2   # height of the table
    boundary = 0.095  # redundant boundary for z axis
    
    clip_maps(height,boundary)
